{"version":3,"sources":["main.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,EAAE,IAAF,CAAO;AACH,SAAK;AADF,CAAP,EAGC,IAHD,CAGM,UAAC,IAAD,EAAU;AACb,QAAI,QAAQ,IAAZ;AACC,aAAS,OAAT,CAAkB,CAAlB,EAAoB,CAApB,EAAuB;AACnB,YAAI,EAAE,KAAF,GAAQ,EAAE,KAAd,EAAqB;AACjB,mBAAO,CAAC,CAAR;AACH;AACD,YAAI,EAAE,KAAF,GAAQ,EAAE,KAAd,EAAqB;AACjB,mBAAO,CAAP;AACH;AACD,eAAO,CAAP;AACH;AACD,UAAM,IAAN,CAAW,OAAX;AACA,YAAQ,GAAR,CAAY,KAAZ;AAIH,CAnBD","file":"main-compiled.js","sourcesContent":["/*\r\n parsing from txt.rawData into JSON\r\n let rawData = data;\r\n let regExpGroups = /----- \\d{1,2} -----/g;\r\n let wordGroups = rawData.split(regExpGroups);\r\n let bigList = [];\r\n let wordNumber = 0;\r\n for (let i=1; i<=21; i++) {\r\n let group = wordGroups[i];\r\n let regExpWords = /(\\w+)\\r\\n(?:\\s{4}([ \\w,*]+)\\r\\n)?/gi;\r\n let regExpResult;\r\n while ((regExpResult = regExpWords.exec(group)) !== null) {\r\n wordNumber++;\r\n let word = {\r\n word: regExpResult[1],\r\n number: wordNumber,\r\n group: i,\r\n synonyms: regExpResult[2]\r\n };\r\n bigList.push(word)\r\n }\r\n }\r\n console.log(JSON.stringify(bigList))\r\n */\r\n$.ajax({\r\n    url: 'http://tup1tsa.bounceme.net/learnWords/wordsLists/sorted_34k.txt'\r\n})\r\n.done((data) => {\r\n   let words = data;\r\n    function compare (a,b) {\r\n        if (a.power>b.power) {\r\n            return -1\r\n        }\r\n        if (a.power<b.power) {\r\n            return 1\r\n        }\r\n        return 0\r\n    }\r\n    words.sort(compare);\r\n    console.log(words)\r\n\r\n\r\n\r\n});\r\n\r\n\r\n"]}