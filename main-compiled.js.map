{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA","file":"main-compiled.js","sourcesContent":["/*\r\n parsing from txt.rawData into JSON\r\n let rawData = data.toLowerCase().replace(/[!)(]/g, '');\r\n let regExpGroups = /----- \\d{1,2} -----/g;\r\n let wordGroups = rawData.split(regExpGroups);\r\n let bigList = [];\r\n let wordNumber = 0;\r\n for (let i=1; i<=21; i++) {\r\n let group = wordGroups[i];\r\n let regExpWords = /([\\w'-]+)\\r\\n(?:\\s{4}([ \\w,*'-]+)\\r\\n)?/g;\r\n let regExpResult;\r\n while ((regExpResult = regExpWords.exec(group)) !== null) {\r\n wordNumber++;\r\n let word = {\r\n word: regExpResult[1],\r\n number: wordNumber,\r\n group: i,\r\n differentSpellings: regExpResult[2]\r\n };\r\n if (!word.word.match(/-/)) {\r\n bigList.push(word);\r\n }\r\n }\r\n }\r\n console.log(JSON.stringify(bigList));\r\n */\r\n\r\n/*get sorted Data\r\n$.ajax({\r\n    url: 'http://tup1tsa.bounceme.net/learnWords/wordsLists/sorted_34k.txt'\r\n})\r\n.done((data) => {\r\n    let mainWords = JSON.parse(data);\r\n    $.ajax({\r\n            url: 'http://tup1tsa.bounceme.net/learnWords/wordsLists/rawLists/300k.txt'\r\n        })\r\n        .done((data) => {\r\n            let superBigList = [];\r\n\r\n            let powerWordsRaw = data;\r\n            let regExp = /(\\w+)\\s+(\\d+)/g;\r\n            let regExpResult;\r\n            while ((regExpResult = (regExp.exec(powerWordsRaw)))!==null) {\r\n                superBigList.push({\r\n                    word: regExpResult[1],\r\n                    power: parseInt(regExpResult[2])\r\n                })\r\n            }\r\n\r\n\r\n            let power = 3000;\r\n            for (let i=0; i<mainWords.length; i++) {\r\n                let mainWord = mainWords[i];\r\n                for (let j=0; j<superBigList.length; j++) {\r\n                    let powerWord = superBigList[j];\r\n                    if (mainWord.word === powerWord.word) {\r\n                        mainWord.power = powerWord.power;\r\n                        break\r\n                    }\r\n                }\r\n                if (!mainWord.power) {\r\n                    mainWord.power = power;\r\n                    power--\r\n                }\r\n            }\r\n\r\n\r\n            function compare (a,b) {\r\n                if (a.power>b.power) return -1;\r\n                if (a.power<b.power) return 1;\r\n                return 0\r\n            }\r\n            mainWords.sort(compare);\r\n            console.log(JSON.stringify(mainWords))\r\n\r\n\r\n        });\r\n\r\n});\r\n*/\r\n\r\n\r\n//todo - get to work google.api for dictionary (via suspicious site) and yandex.api for translations\r\n\r\n\r\n"]}