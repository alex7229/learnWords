{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/whatwg-fetch/fetch.js","public/learnWords/js/AjaxRequests/getWordsList.js","public/learnWords/js/AjaxRequests/googleApi.js","public/learnWords/js/AjaxRequests/login.js","public/learnWords/js/AjaxRequests/registration.js","public/learnWords/js/AjaxRequests/resetPassword.js","public/learnWords/js/AjaxRequests/savedYandexTranslation.js","public/learnWords/js/AjaxRequests/yandexApi.js","public/learnWords/js/Model/Parse/google.js","public/learnWords/js/Model/Parse/yandex.js","public/learnWords/js/Model/authentication.js","public/learnWords/js/Model/learningMachine.js","public/learnWords/js/Model/storage.js","public/learnWords/js/Utils/fetchStatusHangling.js","public/learnWords/js/View/authForm.js","public/learnWords/js/View/learnMachineView.js","public/learnWords/js/View/translations.js","public/learnWords/js/main.js"],"names":[],"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","file":"main.compiled.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default () => {\r\n    return new Promise ((resolve, reject) => {\r\n        fetch(`http://tup1tsa.bounceme.net/learnWords/wordsLists/sortedWordsList.json`)\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.json())\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (word) => {\r\n    return new Promise (resolve => {\r\n        fetch('/learnWords/getMeaning', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                word\r\n            })\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.text())\r\n            })\r\n    });\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (encryptedLoginPassword) => {\r\n    return new Promise ((resolve, reject) => {\r\n        fetch('/auth/login', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': encryptedLoginPassword\r\n            }\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.text())\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (encryptedLoginPassword, email, secretQuestion, secretAnswer) => {\r\n    return new Promise ((resolve, reject) => {\r\n        fetch('/auth/registration', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': encryptedLoginPassword\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                secretQuestion,\r\n                secretAnswer\r\n            })\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.text())\r\n            })\r\n            .catch(err => {\r\n                reject (err)\r\n            })\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 16.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport function getSecretQuestion (login, email)  {\r\n    return new Promise ((resolve, reject) => {\r\n        fetch('/auth/resetPassword/getQuestion', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                login,\r\n                email\r\n            })\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.text())\r\n            })\r\n            .catch(err => {\r\n                reject (err)\r\n            })\r\n    })\r\n}\r\n\r\nexport function sendSecretAnswer (login, email, answer)  {\r\n    return new Promise ((resolve, reject) => {\r\n        fetch('/auth/resetPassword/sendAnswer', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                login,\r\n                email,\r\n                answer\r\n            })\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.text())\r\n            })\r\n            .catch(err => {\r\n                reject (err)\r\n            })\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (word) => {\r\n    return new Promise ((resolve,reject) => {\r\n        fetch(`http://tup1tsa.bounceme.net/learnWords/wordsLists/yandexTranslations/${word}.txt`)\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.json())\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (word) => {\r\n    return new Promise(resolve => {\r\n        fetch('/learnWords/getTranslation', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                word\r\n            })\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve (response.text())\r\n            })\r\n\r\n    });\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nexport default class {\r\n    \r\n    constructor (rawData) {\r\n        this.rawData = rawData;\r\n    }\r\n\r\n    getData () {\r\n        return {\r\n            definitionLists : this.findDefinitionLists(this.findDefinitionChunks()),\r\n            webDefinitionLists: this.findWebDefinitionLists(this.findWebDefinitionChunk()),\r\n            grammar: this.findGrammar()\r\n        }\r\n    }\r\n\r\n    findDefinitionChunks() {\r\n        const regExp = /<b>(.*)\\n[\\s\\S]*?<\\/[\\s\\S]*?<div class=std style=\"padding-left:40px\">([\\s\\S]*?)(<div id=\"forEmbed\">|<hr>)/g;\r\n        let regExpResult;\r\n        let definitionsChunks = [];\r\n        while ((regExpResult = regExp.exec(this.rawData)) !== null) {\r\n            definitionsChunks.push({\r\n                typeOfWord: regExpResult[1],\r\n                body: regExpResult[2]\r\n            })\r\n        }\r\n        return definitionsChunks\r\n    }\r\n\r\n    findDefinitionLists(chunks) {\r\n        return chunks.map(chunk => {\r\n            const list = chunk.body.split(/<li style=\"list-style:decimal\">/g).slice(1).map(listValue => {\r\n                return this.deleteUnnecessaryRow(listValue)\r\n            });\r\n            return {\r\n                typeOfWord: chunk.typeOfWord,\r\n                list\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteUnnecessaryRow(listValue) {\r\n        const regExp = /color:#767676/;\r\n        if (listValue.match(regExp)) {\r\n            return listValue\r\n        } else {\r\n            return listValue.replace(/<div[\\s\\S]*<\\/div>/, '')\r\n        }\r\n    }\r\n\r\n\r\n    findWebDefinitionChunk() {\r\n        const regExp = /Web Definitions[\\s\\S]*<\\/ol>/g;\r\n        return this.rawData.match(regExp)[0];\r\n    }\r\n\r\n    findWebDefinitionLists (chunk) {\r\n        let webList = [];\r\n        const regExp = /<li style=\"list-style:decimal; margin-bottom:10px;\">([\\s\\S]*?)<\\/li>/g;\r\n        let regExpResult;\r\n        while ((regExpResult = regExp.exec(chunk)) !== null) {\r\n            webList.push(regExpResult[1])\r\n        }\r\n        return webList\r\n    }\r\n\r\n    findGrammar () {\r\n        const regExp = /<span style=\"color:#767676\">([\\s\\S]*?)<\\/span>/;\r\n        return this.rawData.match(regExp)[1].slice(0,-2);\r\n    }\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nexport default class {\r\n\r\n    constructor (data) {\r\n        this.jsonData = data\r\n    }\r\n\r\n    getData () {\r\n        if (this.jsonData.def.length === 0) return;\r\n        return this.jsonData.def.map(description => {\r\n            return {\r\n                type: description.pos || ``,\r\n                transcription: description.ts ? `[${description.ts}]` : ``,\r\n                translations: description.tr\r\n                    .map(translation => {\r\n                        return {\r\n                            examples: this.transformExamples(translation.ex),\r\n                            synonyms: this.transformSynonyms(translation.syn),\r\n                            synonymsEn: this.transformSynonyms(translation.mean),\r\n                            translationType: translation.pos,\r\n                            translation: translation.text\r\n                        };\r\n                    })\r\n\r\n            };\r\n        })\r\n    }\r\n\r\n    transformExamples (examples = []) {\r\n        return examples.map(example => {\r\n            return `${example.text} - ${example.tr[0].text}`\r\n        })\r\n    }\r\n\r\n    transformSynonyms (synonyms = []) {\r\n        return synonyms.map(synonym => {\r\n            return synonym.text\r\n        })\r\n    }\r\n\r\n    findCorrectAnswers (parsedWords) {\r\n        return parsedWords.map(word => {\r\n            return word.translations.map(translation => {\r\n                return translation.translation.toLowerCase()\r\n            })\r\n        }).reduce((previousWords, currentWord) => {\r\n            return previousWords.concat(currentWord)\r\n        }, [])\r\n    }\r\n}","/**\r\n * Created by tup1tsa on 08.08.2016.\r\n */\r\n\r\nexport default class {\r\n    \r\n    findLocalAuthData () {\r\n        let name = localStorage.getItem('authName');\r\n        let password = localStorage.getItem('authPassword');\r\n        if (!(name && password)) {\r\n            name = document.getElementById('loginDefault').value;\r\n            password = document.getElementById('passwordDefault').value;\r\n        }\r\n        if (name && password) {\r\n            return {\r\n                name,\r\n                password\r\n            }\r\n        } else {\r\n            throw new Error('You missed login or password.')\r\n        }\r\n    }\r\n    \r\n    saveCredentials (name, password) {\r\n        if (!localStorage) return;\r\n        localStorage.setItem('authName', name);\r\n        localStorage.setItem('authPassword', password)\r\n    }\r\n    \r\n    deleteCredentials () {\r\n        if (!localStorage) return;\r\n        localStorage.removeItem('authName');\r\n        localStorage.removeItem('authPassword')\r\n    }\r\n\r\n    encryptData (userInfo) {\r\n        return btoa(`${userInfo.name}:${userInfo.password}`)\r\n    }\r\n    \r\n    gatherUserInfo() {\r\n        const name = document.getElementById('loginReg').value;\r\n        const password = document.getElementById('passwordReg').value;\r\n        const checkPassword = document.getElementById('repeatedPassword').value;\r\n        const email = document.getElementById('emailReg').value;\r\n        const secretQuestion = document.getElementById('secretQuestionReg').value;\r\n        const secretAnswer = document.getElementById('secretAnswerReg').value;\r\n        if (!name || !password || !checkPassword || !email || !secretQuestion || !secretAnswer) {\r\n            throw new Error ('All fields required')\r\n        }\r\n        if (password !== checkPassword) {\r\n            throw new Error ('Passwords are different')\r\n        }\r\n        const encryptedAuthorizationData = this.encryptData({\r\n            name,\r\n            password\r\n        });\r\n        return {\r\n            encryptedAuthorizationData,\r\n            email,\r\n            secretQuestion,\r\n            secretAnswer\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n}\r\n  \r\n","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport getWordsList from '../AjaxRequests/getWordsList'\r\nimport getSavedYandexWordTranslation from '../AjaxRequests/savedYandexTranslation'\r\nimport YandexParse from '../Model/Parse/yandex'\r\nimport View from '../View/learnMachineView'\r\n\r\nexport default class  {\r\n\r\n    constructor () {\r\n        this.correctAnswers = [];\r\n        this.allWords = [];\r\n    }\r\n    \r\n    setUserData (data) {\r\n        this.userData = data\r\n    }\r\n\r\n    downloadWords () {\r\n        return new Promise( (resolve, reject) => {\r\n            getWordsList()\r\n                .then(data => {\r\n                    this.allWords = data;\r\n                    resolve(true)\r\n                }, err => {\r\n                    reject(err)\r\n                })\r\n        })\r\n    }\r\n    \r\n    checkWordsList () {\r\n        if (this.allWords.length>1) {\r\n            return true\r\n        }\r\n    }\r\n    \r\n    getCurrentNumber () {\r\n        return this.userData.currentWord;\r\n    }\r\n\r\n    setNextWordNumber () {\r\n        let self = this;\r\n        let nextWord = this.findFirstReadyWordFromPool();\r\n        if (nextWord) {\r\n            this.userData.currentWord = nextWord.number;\r\n            return\r\n        }\r\n        let nextWordNumber;\r\n        if (this.userData.options.order === 'random') {\r\n            nextWordNumber = findNextRandomWordNumber()\r\n        } else {\r\n            nextWordNumber = this.userData.currentWord + 1;\r\n            if (nextWordNumber>this.userData.options.lastWord) {\r\n                this.userData.currentWord = undefined;\r\n                return\r\n            }\r\n\r\n        }\r\n        this.userData.currentWord = nextWordNumber;\r\n\r\n        function findNextRandomWordNumber() {\r\n            if ((self.userData.learningPool.length+self.userData.knownWords.length) > (self.userData.options.lastWord-self.userData.options.firstWord)) {\r\n                return undefined\r\n            }\r\n            let number = Math.ceil(Math.random() * self.userData.options.lastWord);\r\n            if ((!self.findWordInKnownList(number)) && (!self.findWordInPool(number))) {\r\n                return number\r\n            } else {\r\n                return findNextRandomWordNumber()\r\n            }\r\n        }\r\n    }\r\n\r\n    findWordInKnownList (number) {\r\n        let currentWord = this.userData.knownWords.filter(wordNumber => {\r\n            if (wordNumber === number) {\r\n                return number\r\n            }\r\n        });\r\n        if (currentWord.length === 1) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    findWordInPool (wordNumber) {\r\n        let currentWord = this.userData.learningPool.filter(word => {\r\n            if (word.number == wordNumber) {\r\n                return word\r\n            }\r\n        });\r\n        if (currentWord.length === 1) {\r\n            return currentWord[0]\r\n        }\r\n    }\r\n    \r\n    getPureAnswerList () {\r\n        return this.correctAnswers;\r\n    }\r\n\r\n    checkAnswer (answer) {\r\n        const number = this.userData.currentWord;\r\n        if (this.correctAnswers.includes(answer)) {\r\n            if (this.findWordInPool(this.userData.currentWord)) {\r\n                this.updateWordInPool(number, true);\r\n            } else {\r\n                this.userData.knownWords.push(number);\r\n            }\r\n            this.setNextWordNumber();\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    \r\n    skipWord() {\r\n        this.userData.knownWords.push(this.userData.currentWord);\r\n        this.setNextWordNumber();\r\n    }\r\n\r\n    addWordToPool () {\r\n        const sixHours = 6*60*60*1000;\r\n        const currentTime = new Date().getTime();\r\n        const word = {\r\n            number: this.userData.currentWord,\r\n            successGuesses: 0,\r\n            lastGuessTime: currentTime,\r\n            nextGuessTime: currentTime + sixHours\r\n        };\r\n        this.userData.learningPool.push(word)\r\n    }\r\n\r\n    getPoolLength (nextGuessTime) {\r\n        const pool = this.userData.learningPool;\r\n        return pool.filter(wordData => {\r\n            if (wordData.nextGuessTime<=nextGuessTime) {\r\n                return wordData\r\n            }\r\n        }).length\r\n    }\r\n    \r\n    getKnownWordsCount() {\r\n        return this.userData.knownWords.length\r\n    }\r\n\r\n    updateWordInPool (wordNumber, successGuess) {\r\n        let word = this.findWordInPool(wordNumber);\r\n        const currentTime = new Date().getTime();\r\n        word.lastGuessTime = currentTime;\r\n        if (successGuess) {\r\n            word.successGuesses++;\r\n            const currentAttempt = word.successGuesses;\r\n            let delay;\r\n            if (currentAttempt<=3) {\r\n                delay = 6*60*60*1000;\r\n            } else if (currentAttempt>3 && currentAttempt<7) {\r\n                delay = 24*60*60*1000\r\n            } else if (currentAttempt>=7) {\r\n                delay = 3*24*60*60*1000\r\n            }\r\n            word.nextGuessTime = currentTime + delay\r\n        } else {\r\n            word.successGuesses = 0;\r\n            const delay = 6*60*60*1000;\r\n            word.nextGuessTime = currentTime+delay\r\n        }\r\n    }\r\n\r\n    findFirstReadyWordFromPool () {\r\n        const time = new Date().getTime();\r\n        let readyWords = this.userData.learningPool.filter(wordData => {\r\n            if ((wordData.successGuesses<10) && (wordData.nextGuessTime<time)) {\r\n                return wordData.number\r\n            }\r\n        });\r\n        if (readyWords.length>0) {\r\n            return readyWords[0]\r\n        }\r\n    }\r\n\r\n    getQuestion () {\r\n        return new Promise ((resolve, reject) => {\r\n            const wordNumber = this.userData.currentWord;\r\n            const word = this.allWords[wordNumber].word;\r\n            this.getAnswer(word)\r\n                .then(() => {\r\n                    resolve(word)\r\n                }, err => {\r\n                    reject (err)\r\n                })\r\n        })\r\n        \r\n    }\r\n\r\n    getAnswer (word) {\r\n        return new Promise ((resolve, reject) => {\r\n            getSavedYandexWordTranslation(word)\r\n                .then(data => {\r\n                    const parse = new YandexParse(data);\r\n                    this.correctAnswers = parse.findCorrectAnswers(parse.getData(data));\r\n                    resolve(this.correctAnswers)\r\n                }, err => {\r\n                    reject(err)\r\n                })\r\n        })\r\n        \r\n    }\r\n    \r\n    getUserData() {\r\n        return this.userData;\r\n    }\r\n\r\n    setNextWordNumberStraight () {\r\n        const number = document.getElementById('straightNumber').value;\r\n        this.userData.currentWord = number\r\n    }\r\n\r\n\r\n}\r\n\r\n// todo - view is changing by model, not controller.","/**\r\n * Created by tup1tsa on 21.08.2016.\r\n */\r\nexport function saveOptions(firstWord, lastWord, order) {\r\n    let data = getData();\r\n    if (!data) {\r\n        data = {\r\n            options: {\r\n                firstWord,\r\n                lastWord,\r\n                order\r\n            },\r\n            learningPool: [],\r\n            knownWords: [],\r\n            currentWord: 1\r\n        };\r\n        if (order === 'random') {\r\n            data.currentWord = Math.ceil(Math.random() * data.options.lastWord)\r\n        }\r\n        localStorage.setItem('learnWords', JSON.stringify(data))\r\n    } else {\r\n        throw new Error ('Data already set')\r\n    }\r\n}\r\n\r\nexport function updateUserData(userData) {\r\n    localStorage.setItem('learnWords', JSON.stringify(userData))\r\n}\r\n\r\nexport function getData () {\r\n    const jsonData = localStorage.getItem('learnWords');\r\n    if (jsonData) {\r\n        try {\r\n            var data = JSON.parse(jsonData);\r\n        } catch (err) {\r\n            throw new Error('Not correct JSON in local storage')\r\n        }\r\n        return data\r\n    }\r\n}\r\n\r\nexport function saveSession (userData) {\r\n    const jsonData = JSON.stringify(userData);\r\n    localStorage.setItem('learnWords', jsonData)\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nexport default (response) => {\r\n    if (response.status >= 200 && response.status < 300) {\r\n        return response\r\n    } else {\r\n        return new Promise ((resolve, reject) => {\r\n            const error = new Error(response.status);\r\n            error.response = response;\r\n            error.response.text()\r\n                .then((text) => {\r\n                    error.message = text;\r\n                    reject(error)\r\n                } )\r\n        })\r\n    }\r\n}","/**\r\n * Created by tup1tsa on 12.08.2016.\r\n */\r\nexport function showRegistrationBlock () {\r\n    hideAll();\r\n    display('registration')\r\n}\r\n\r\nexport function showUserInfoBlock(profileName) {\r\n    hideAll();\r\n    document.getElementById('profileName').innerText = profileName;\r\n    display('profileData')\r\n}\r\n\r\nexport function showNotification (text, color = 'black') {\r\n    let elem = document.getElementById('authNotification');\r\n    elem.innerHTML = `<p>${text}</p>`;\r\n    elem.style.color = color;\r\n    elem.style.display = 'block'\r\n}\r\n\r\nexport function hideNotification () {\r\n    document.getElementById('authNotification').style.display = 'none'\r\n}\r\n\r\nexport function showResetPasswordBlock () {\r\n    hideAll();\r\n    display(`resetPassword`);\r\n}\r\n\r\nexport function showLogin () {\r\n    hideAll();\r\n    display('authDefault')\r\n}\r\n\r\nexport function showAuthForm () {\r\n    document.getElementById('authentication').style.display = 'block'\r\n}\r\n\r\nfunction display(id) {\r\n    document.getElementById(id).style.display = 'block'\r\n}\r\n\r\nfunction hideAll () {\r\n    document.querySelectorAll('.auth').forEach(elem => {\r\n        elem.style.display='none'\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 12.08.2016.\r\n */\r\nexport default class {\r\n    \r\n    static toggleBlock (id, typeOfBLock, state) {\r\n        let elem = document.getElementById(id);\r\n        if (state) {\r\n            elem.style.display = typeOfBLock\r\n        } else {\r\n            elem.style.display = 'none'\r\n        }\r\n    }\r\n    \r\n    static showPureAnswers(answersArray) {\r\n        let box = document.getElementById('pureAnswersBox');\r\n        const list = answersArray.join(', ');\r\n        box.innerHTML = `${list}<hr>`\r\n    }\r\n\r\n    static showQuestion (word) {\r\n        document.getElementById('questionedWord').textContent = word\r\n    }\r\n\r\n    static showWordStatistics (data) {\r\n        let elem = document.getElementById('statistics');\r\n        if (typeof data === 'string') {\r\n            elem.innerHTML = data\r\n        } else {\r\n            const successGuesses = data.successGuesses;\r\n            const lastGuessTime = new Date(data.lastGuessTime).toLocaleString();\r\n            elem.innerHTML = `Difficulty is ${(data.number/25000*100).toFixed(2)}%.<br>That word is from your pool. U have guessed it right ${successGuesses} times. Last check was ${lastGuessTime}`;\r\n        }\r\n    }\r\n    static showPoolStatistics (htmlData) {\r\n        let elem = document.getElementById('poolData');\r\n        elem.innerHTML = htmlData\r\n    }\r\n    \r\n    static checkPoolStatisticsDisplayState() {\r\n        let elem = document.getElementById('poolData');\r\n        if (elem.innerHTML.length>0) {\r\n            return true\r\n        }\r\n    }\r\n    \r\n    static hidePoolData () {\r\n        document.getElementById('poolData').innerHTML = ``\r\n    }\r\n    \r\n    static clearInput() {\r\n        document.getElementById('answerWord').value = ''\r\n    }\r\n    \r\n    static clearTranslations () {\r\n        let translations = document.querySelectorAll('#pureAnswersBox, #translationBox, #dictionaryBox');\r\n        for (let elem of translations) {\r\n            elem.innerHTML = ``\r\n        }\r\n    }\r\n    \r\n    static showNotification (text) {\r\n        let elem = document.getElementById('learningNotification');\r\n        elem.innerText = text;\r\n        elem.style.display = 'block'\r\n    }\r\n    \r\n    static hideNotification () {\r\n        document.getElementById('learningNotification').style.display = 'none'\r\n    }\r\n\r\n    static playCorrectAnswerSound () {\r\n        const audio = new Audio('audio/whoosh.mp3');\r\n        audio.play();\r\n    }\r\n\r\n    static toggleResetButtons (state) {\r\n        let buttons = document.querySelectorAll('#fullReset, #updateOptions');\r\n        for (let button of buttons) {\r\n            if (state) {\r\n                button.style.display = 'inline-block'\r\n            } else {\r\n                buttons.style.display = 'none'\r\n            }\r\n        }\r\n    }\r\n    \r\n    static showPreferencesData(minRange, maxRange, order) {\r\n        document.getElementById('minRange').value = minRange;\r\n        document.getElementById('maxRange').value = maxRange;\r\n        document.getElementById('order').value = order\r\n    }\r\n    \r\n    \r\n}","/**\r\n * Created by tup1tsa on 12.08.2016.\r\n */\r\nexport function yandex (words) {\r\n    document.getElementById('translationBox').innerHTML =\r\n        words.map(word => {\r\n            return `<br><span class=\"ital\"><b>${word.type}</b></span> ${word.transcription} ` +\r\n                word.translations.map((translation, index) => {\r\n                    let innerHTML =`<br>${index+1}) ${translation.translation}`;\r\n                    if (translation.examples.length !== 0) {\r\n                        innerHTML += '. <br><span class=\"tabbed\">Examples:</span> ' +\r\n                            translation.examples.join('; ');\r\n                    }\r\n                    if (translation.synonyms.length !== 0) {\r\n                        innerHTML += `. <br><span class=\"tabbed\">Synonyms:</span> `+\r\n                            translation.synonyms.join('; ');\r\n                    }\r\n                    if (translation.synonymsEn.length !== 0) {\r\n                        innerHTML += `. <br><span class=\"tabbed\">Synonyms (en):</span> `+\r\n                            translation.synonymsEn.join('; ');\r\n                    }\r\n                    return innerHTML\r\n                }).join('')\r\n        }) + '<hr>';\r\n}\r\n\r\nexport function google (data) {\r\n    const grammar = `<span class=\"googleGrammar\"><b>Grammar:</b> ${data.grammar}</span><br>`;\r\n    const definitions = data.definitionLists.map(chunk => {\r\n        return `<b>${chunk.typeOfWord}</b><br><ol>\r\n                ${chunk.list.map(definition => {\r\n            return `<li>${definition}</li>`\r\n        }).join('')}</ol><hr>`\r\n    });\r\n    const webDefinition = `<b>Web Results:</b><ol>\r\n            ${data.webDefinitionLists.map(row => {\r\n        return `<li>${row}</li>`\r\n    }).join('')}</ol>`;\r\n    document.getElementById('dictionaryBox').innerHTML = grammar + definitions+ webDefinition\r\n}","//todo -  add sound (when u guessed right answer) from fallout4, add authentication (to save user progress)\r\nrequire('whatwg-fetch');\r\nimport LearnMachine from './Model/learningMachine'\r\nimport yandexApi from './AjaxRequests/yandexApi'\r\nimport googleApi from './AjaxRequests/googleApi'\r\nimport savedYandexTranslation from './AjaxRequests/savedYandexTranslation'\r\nimport fetchRegistration from './AjaxRequests/registration'\r\nimport fetchLogin from './AjaxRequests/login'\r\nimport {getSecretQuestion as fetchGetQuestion, sendSecretAnswer as fetchSendAnswer} from './AjaxRequests/resetPassword'\r\nimport YandexParse from './Model/Parse/yandex'\r\nimport GoogleParse from './Model/Parse/google'\r\nimport Auth from './Model/authentication.js'\r\nimport {getData as storageGetData, saveOptions as storageSaveOptions, saveSession, updateUserData as storageUpdateData} from './Model/storage'\r\nimport {yandex as yandexView, google as googleView} from './View/translations'\r\nimport {showRegistrationBlock, showResetPasswordBlock, showNotification, hideNotification, showUserInfoBlock, showLogin, showAuthForm, logOut as viewLogOut} from './View/authForm'\r\nimport LearnMachineView from './View/learnMachineView'\r\n\r\n\r\n\r\n\r\nvar learningMachine = new LearnMachine();\r\n\r\nconst controller = {\r\n\r\n    getYandexTranslation() {\r\n        const word = document.getElementById('questionedWord').innerText;\r\n        if ((!word)) return;\r\n        savedYandexTranslation(word)\r\n            .then(data => {\r\n                const parse = new YandexParse(data);\r\n                yandexView(parse.getData());\r\n            }, err => {\r\n                if (err.status === 404) {\r\n                    yandexApi(word)\r\n                        .then(data => {\r\n                            const parse = new YandexParse(data);\r\n                            yandexView(parse.getData());\r\n                        })\r\n                }\r\n            })\r\n    },\r\n\r\n    getGoogleMeaning() {\r\n        const word = document.getElementById('questionedWord').innerText;\r\n        if ((!word)) return;\r\n        googleApi(word)\r\n            .then(data => {\r\n                const parse = new GoogleParse(data);\r\n                googleView(parse.getData());\r\n            })\r\n    },\r\n\r\n    showPureAnswers () {\r\n        const answers = learningMachine.getPureAnswerList();\r\n        LearnMachineView.showPureAnswers(answers);\r\n    },\r\n\r\n    showAllTranslations () {\r\n        this.showPureAnswers();\r\n        this.getYandexTranslation();\r\n        this.getGoogleMeaning()\r\n    },\r\n\r\n    startLearning () {\r\n        const lastWord = parseInt(document.getElementById('maxRange').value);\r\n        const firstWord = parseInt(document.getElementById('minRange').value);\r\n        const orderValue = document.getElementById('order').value;\r\n        if (firstWord < 0 || lastWord > 25000) {\r\n            LearnMachineView.showNotification('range of words is not correct');\r\n            return\r\n        }\r\n        if (!((orderValue === 'random') || (orderValue === 'sequential'))) {\r\n            LearnMachineView.showNotification('Order is not random nor sequential');\r\n            return\r\n        }\r\n        storageSaveOptions(firstWord, lastWord, orderValue);\r\n        learningMachine.setUserData(storageGetData());\r\n        learningMachine.setNextWordNumber();\r\n        learningMachine.downloadWords()\r\n            .then(() => {\r\n                controller.getQuestion()\r\n            });\r\n        LearnMachineView.toggleBlock('words', 'block', true);\r\n        LearnMachineView.toggleBlock('preferences', 'block', false);\r\n        LearnMachineView.toggleBlock('learningNotification');\r\n    },\r\n\r\n    getQuestion () {\r\n        if (learningMachine.getCurrentNumber()) {\r\n            learningMachine.getQuestion()\r\n                .then((questionWord) => {\r\n                    const number = learningMachine.getCurrentNumber();\r\n                    const wordInPool = learningMachine.findWordInPool(number);\r\n                    if (wordInPool) {\r\n                        LearnMachineView.showWordStatistics(wordInPool)\r\n                    } else {\r\n                        LearnMachineView.showWordStatistics(`Difficulty is ${(number/25000*100).toFixed(2)}%.<br>U see that word for first time. `)\r\n                    }\r\n                    LearnMachineView.showQuestion(questionWord)\r\n                })\r\n\r\n        } else {\r\n            LearnMachineView.toggleBlock('fullReset', 'inline-block', true);\r\n            LearnMachineView.toggleBlock('updateOptions', 'inline-block', true);\r\n            LearnMachineView.toggleBlock('words');\r\n            LearnMachineView.toggleBlock('preferences', 'block', true);\r\n            LearnMachineView.toggleBlock('startLearning');\r\n            const userData = learningMachine.getUserData();\r\n            LearnMachineView.showPreferencesData(userData.options.firstWord, userData.options.lastWord, userData.options.order);\r\n            LearnMachineView.showNotification('There are no words left. Start another learning process or update range of words (order would be the same).');\r\n        }\r\n\r\n    },\r\n\r\n    startLearnWord () {\r\n        const number = learningMachine.getCurrentNumber();\r\n        if (learningMachine.findWordInPool(number)) {\r\n            learningMachine.updateWordInPool(number, false)\r\n        } else {\r\n            learningMachine.addWordToPool();\r\n        }\r\n        learningMachine.setNextWordNumber();\r\n        saveSession(learningMachine.getUserData());\r\n        LearnMachineView.clearInput();\r\n        LearnMachineView.clearTranslations();\r\n        this.getQuestion();\r\n        this.updatePoolStatistics();\r\n    },\r\n    \r\n    tryToGuessWord() {\r\n        const word = document.getElementById('answerWord').value;\r\n        if (learningMachine.checkAnswer(word)) {\r\n            saveSession(learningMachine.getUserData());\r\n            LearnMachineView.clearInput();\r\n            LearnMachineView.clearTranslations();\r\n            this.getQuestion();\r\n            this.updatePoolStatistics();\r\n            LearnMachineView.showNotification('Answer is correct')\r\n        } else {\r\n            LearnMachineView.showNotification('Answer is incorrect')\r\n        }\r\n    },\r\n\r\n    skipWord () {\r\n        learningMachine.skipWord();\r\n        saveSession(learningMachine.getUserData());\r\n        LearnMachineView.clearInput();\r\n        LearnMachineView.clearTranslations();\r\n        this.getQuestion();\r\n        this.updatePoolStatistics();\r\n    },\r\n\r\n    fullReset() {\r\n        localStorage.clear();\r\n        LearnMachineView.toggleBlock('fullReset');\r\n        LearnMachineView.toggleBlock('updateOptions');\r\n        LearnMachineView.toggleBlock('learningNotification');\r\n        LearnMachineView.toggleBlock('preferences');\r\n        LearnMachineView.toggleBlock('startLearning', 'inline-block', true);\r\n        this.startLearning();\r\n    },\r\n\r\n    updateUserOptions () {\r\n        const oldUserData = learningMachine.getUserData();\r\n        console.log(oldUserData);\r\n        const newMinRange = parseInt(document.getElementById('minRange').value);\r\n        const newMaxRange = parseInt(document.getElementById('maxRange').value);\r\n        const oldMinRange = oldUserData.options.firstWord;\r\n        const oldMaxRange = oldUserData.options.lastWord;\r\n        if (newMinRange>oldMinRange) {\r\n            LearnMachineView.showNotification(`Your first word should be equal or less than ${oldMinRange}`);\r\n        } else if (newMaxRange<oldMaxRange) {\r\n            LearnMachineView.showNotification(`Your last word should be equal or more than ${oldMaxRange}`);\r\n        } else if (((newMinRange === oldMinRange) && (newMaxRange === oldMaxRange)) || (!newMinRange) || (!newMaxRange)) {\r\n            LearnMachineView.showNotification(`You should declare new minimum and maximum ranges`);\r\n        }  else {\r\n            let oldStorageData = storageGetData();\r\n            oldStorageData.options.firstWord  = newMinRange;\r\n            oldStorageData.options.lastWord = newMaxRange;\r\n            storageUpdateData(oldStorageData);\r\n            LearnMachineView.toggleBlock('startLearning', 'inline-block', true);\r\n            LearnMachineView.toggleBlock('preferences');\r\n            LearnMachineView.toggleBlock('fullReset');\r\n            LearnMachineView.toggleBlock('updateOptions');\r\n            LearnMachineView.toggleBlock('words', 'block', true);\r\n            learningMachine.setUserData(storageGetData());\r\n            learningMachine.setNextWordNumber();\r\n            this.getQuestion();\r\n        }\r\n\r\n    },\r\n\r\n    showUserPool () {\r\n        const sixHoursMs = 6*3600*1000;\r\n        const dayMs = 24*3600*1000;\r\n        const weekMs = 7*24*3600*1000;\r\n        const currentTime = new Date().getTime();\r\n        const newWordsCount = learningMachine.getPoolLength(currentTime+sixHoursMs);\r\n        const mediumWordsCount = learningMachine.getPoolLength(currentTime+dayMs);\r\n        const oldWordsCount = learningMachine.getPoolLength(currentTime+weekMs);\r\n        const knownWordsCount = learningMachine.getKnownWordsCount();\r\n        const data = `New words: ${newWordsCount}.<br>Medium words: ${mediumWordsCount}.<br>Old words: ${oldWordsCount}.<br>All known words: ${knownWordsCount}`;\r\n        LearnMachineView.showPoolStatistics(data);\r\n    },\r\n\r\n    updatePoolStatistics() {\r\n      if (LearnMachineView.checkPoolStatisticsDisplayState()) {\r\n          this.showUserPool()\r\n      }\r\n    },\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    register () {\r\n        const auth = new Auth();\r\n        let errors = false;\r\n        try {\r\n            var userInfo = auth.gatherUserInfo()\r\n        } catch (err) {\r\n            showNotification(err.message, 'brown');\r\n            errors = true\r\n        }\r\n        if (errors) return;\r\n        fetchRegistration(userInfo.encryptedAuthorizationData, userInfo.email, userInfo.secretQuestion, userInfo.secretAnswer)\r\n            .then(() => {\r\n                const userInfo = auth.findLocalAuthData();\r\n                auth.saveCredentials(userInfo.name, userInfo.password);\r\n                showUserInfoBlock(userInfo.name)\r\n            }, err => {\r\n                showNotification(err.message, 'brown');\r\n            })\r\n    },\r\n\r\n    login () {\r\n        return new Promise((resolve, reject) => {\r\n            const auth = new Auth();\r\n            try {\r\n                var userInfo = auth.findLocalAuthData()\r\n            } catch (err) {\r\n                showNotification(err.message, 'brown');\r\n                reject(err.message);\r\n            }\r\n            fetchLogin(auth.encryptData(userInfo))\r\n                .then((result) => {\r\n                    auth.saveCredentials(userInfo.name, userInfo.password);\r\n                    showUserInfoBlock(userInfo.name);\r\n                    resolve(result)\r\n                }, err => {\r\n                    showNotification(err.message, 'brown');\r\n                    reject(err.message)\r\n                })\r\n        })\r\n    },\r\n\r\n    logOut () {\r\n        const auth = new Auth();\r\n        auth.deleteCredentials();\r\n        viewLogOut();\r\n    },\r\n\r\n    getSecretQuestion () {\r\n        const login = document.getElementById('loginReset').value;\r\n        const email = document.getElementById('emailReset').value;\r\n        fetchGetQuestion(login, email)\r\n            .then((secretQuestion) => {\r\n                document.getElementById('secretQuestionReset').innerText = secretQuestion\r\n            }, err => {\r\n                showNotification(err, 'brown')\r\n            })\r\n    },\r\n\r\n    sendSecretQuestion () {\r\n        const login = document.getElementById('loginReset').value;\r\n        const email = document.getElementById('emailReset').value;\r\n        const answer = document.getElementById('secretAnswerReset').value;\r\n        if (!((login || email) && answer)) {\r\n            showNotification('Enter login or email and secret answer', 'brown');\r\n            return\r\n        }\r\n        fetchSendAnswer(login, email, answer)\r\n            .then((response) => {\r\n                showNotification(response);\r\n            }, err => {\r\n                showNotification(err, 'brown')\r\n            })\r\n\r\n\r\n    },\r\n\r\n    listenKeyboardButtons (elem) {\r\n        if (elem.keyCode ==13) {\r\n            this.tryToGuessWord();\r\n        }\r\n    },\r\n\r\n    listenButtons () {\r\n        document.getElementById(\"startLearnWord\").onclick = this.startLearnWord.bind(this);\r\n        document.getElementById(\"startLearning\").onclick = this.startLearning.bind(this);\r\n        document.getElementById('showUserData').onclick = this.showUserPool;\r\n        document.getElementById('hideUserData').onclick = LearnMachineView.hidePoolData;\r\n        document.getElementById('skipWord').onclick = this.skipWord.bind(this);\r\n        document.getElementById('showTranslations').onclick = this.showAllTranslations.bind(this);\r\n        document.getElementById('insertNumber').onclick = learningMachine.setNextWordNumberStraight.bind(learningMachine);\r\n        document.getElementById('answerWord').onkeydown = this.listenKeyboardButtons.bind(this);\r\n        document.getElementById('fullReset').onclick = this.fullReset.bind(this);\r\n        document.getElementById('updateOptions').onclick = this.updateUserOptions.bind(this);\r\n\r\n        document.getElementById('loginBtn').onclick = this.login;\r\n        document.getElementById('startRegistration').onclick = showRegistrationBlock;\r\n        document.getElementById('endRegistration').onclick = this.register;\r\n        document.getElementById('logOut').onclick = this.logOut;\r\n        document.getElementById('resetPasswordStart').onclick = showResetPasswordBlock;\r\n        document.getElementById('getSecretQuestion').onclick = this.getSecretQuestion;\r\n        document.getElementById('resetPasswordFinish').onclick = this.sendSecretQuestion;\r\n    }\r\n};\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n window.onload = () => {\r\n     \r\n     controller.listenButtons();\r\n\r\n     if (localStorage.getItem('learnWords')) {\r\n         learningMachine.setUserData(storageGetData());\r\n         learningMachine.downloadWords()\r\n             .then(() => {\r\n                 controller.getQuestion()\r\n             })\r\n     } else {\r\n         LearnMachineView.toggleBlock('preferences', 'block', true);\r\n         LearnMachineView.toggleBlock('words');\r\n     }\r\n\r\n\r\n\r\n     \r\n };\r\n\r\n\r\n//todO: if pool is overwhelming - don't add new words; start new learning with options"]}