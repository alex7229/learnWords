{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/whatwg-fetch/fetch.js","public/learnWords/js/AjaxRequests/getWordsList.js","public/learnWords/js/AjaxRequests/googleApi.js","public/learnWords/js/AjaxRequests/login.js","public/learnWords/js/AjaxRequests/registration.js","public/learnWords/js/AjaxRequests/savedYandexTranslation.js","public/learnWords/js/AjaxRequests/yandexApi.js","public/learnWords/js/Model/authentication.js","public/learnWords/js/Model/learningMachine.js","public/learnWords/js/Parse/google.js","public/learnWords/js/Parse/yandex.js","public/learnWords/js/Utils/fetchStatusHangling.js","public/learnWords/js/View/authForm.js","public/learnWords/js/View/learnMachineView.js","public/learnWords/js/View/translations.js","public/learnWords/js/main.js"],"names":[],"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","file":"main.compiled.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default () => {\r\n    return new Promise ((resolve, reject) => {\r\n        fetch(`http://tup1tsa.bounceme.net/learnWords/wordsLists/sortedWordsList.json`)\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.json())\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (word) => {\r\n    return new Promise (resolve => {\r\n        fetch('/learnWords/getMeaning', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                word\r\n            })\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.text())\r\n            })\r\n    });\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (encryptedLoginPassword) => {\r\n    return new Promise ((resolve, reject) => {\r\n        fetch('/auth/login', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': encryptedLoginPassword\r\n            }\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.text())\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (encryptedLoginPassword, email, secretQuestion, secretAnswer) => {\r\n    return new Promise ((resolve, reject) => {\r\n        fetch('/auth/registration', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': encryptedLoginPassword\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                secretQuestion,\r\n                secretAnswer\r\n            })\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.text())\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (word) => {\r\n    return new Promise ((resolve,reject) => {\r\n        fetch(`http://tup1tsa.bounceme.net/learnWords/wordsLists/yandexTranslations/${word}.txt`)\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve(response.json())\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport checkStatus from '../Utils/fetchStatusHangling';\r\n\r\nexport default (word) => {\r\n    return new Promise(resolve => {\r\n        fetch('/learnWords/getTranslation', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                word\r\n            })\r\n        })\r\n            .then(checkStatus)\r\n            .then(response => {\r\n                resolve (response.text())\r\n            })\r\n\r\n    });\r\n}","/**\r\n * Created by tup1tsa on 08.08.2016.\r\n */\r\nimport login from '../AjaxRequests/login';\r\nimport registration from '../AjaxRequests/registration'\r\n\r\nexport default class {\r\n\r\n    checkUserInfo (encryptedLoginPassword) {\r\n        const authData = this.findLocalAuthData();\r\n        if (authData) {\r\n            const encryptedData = this.encryptData(authData);\r\n            login(encryptedLoginPassword)\r\n        } else {\r\n            throw new Error('U have not declared password or login')\r\n        }\r\n    }\r\n    \r\n    findLocalAuthData () {\r\n        let name = localStorage.getItem('authName');\r\n        let password = localStorage.getItem('authPassword');\r\n        if (!(name && password)) {\r\n            name = document.getElementById('login').value;\r\n            password = document.getElementById('password').value;\r\n        }\r\n        if (name && password) {\r\n            return {\r\n                name,\r\n                password\r\n            }\r\n        }\r\n    }\r\n\r\n    encryptData (userInfo) {\r\n        return btoa(`${userInfo.name}:${userInfo.password}`)\r\n    }\r\n    \r\n    gatherUserInfo() {\r\n        const name = document.getElementById('login').value;\r\n        const password = document.getElementById('password').value;\r\n        const checkPassword = document.getElementById('repeatedPassword').value;\r\n        const email = document.getElementById('email').value;\r\n        const secretQuestion = document.getElementById('secretQuestion').value;\r\n        const secretAnswer = document.getElementById('secretAnswer').value;\r\n        if (!name || !password || !email || !secretQuestion || !secretAnswer) {\r\n            throw new Error ('All fields required')\r\n        }\r\n        if (password !== checkPassword) {\r\n            throw new Error ('Passwords are different')\r\n        }\r\n        const encryptedAuthorizationData = this.encryptData({\r\n            name,\r\n            password\r\n        });\r\n        return {\r\n            encryptedAuthorizationData,\r\n            email,\r\n            secretQuestion,\r\n            secretAnswer\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n}\r\n  \r\n","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nimport getWordsList from '../AjaxRequests/getWordsList'\r\nimport getSavedYandexWordTranslation from '../AjaxRequests/savedYandexTranslation'\r\nimport YandexParse from '../Parse/yandex'\r\nimport View from '../View/learnMachineView'\r\n\r\nexport default class  {\r\n\r\n    constructor () {\r\n        this.correctAnswers = [];\r\n        this.allWords = []\r\n    }\r\n\r\n    getAllWords () {\r\n        getWordsList()\r\n            .then(data => {\r\n                this.allWords = data\r\n            }, err => {\r\n                throw err\r\n            })\r\n    }\r\n\r\n    checkAnswer () {\r\n        const userAnswer = document.getElementById('answerWord').value;\r\n        if (this.correctAnswers.includes(userAnswer)) {\r\n            console.log('answer is correct')\r\n        } else {\r\n            console.log('answer is incorrect')\r\n        }\r\n    }\r\n\r\n    sendQuestion () {\r\n        const wordNumber = Math.ceil(Math.random()*1000);\r\n        const word = this.allWords[wordNumber].word;\r\n        this.getAnswer(word);\r\n        View.showQuestion(word)\r\n    }\r\n\r\n    getAnswer (word) {\r\n        getSavedYandexWordTranslation(word)\r\n            .then(data => {\r\n                const parse = new YandexParse(data);\r\n                this.correctAnswers = parse.findCorrectAnswers(parse.getData(data));\r\n            }, err => {\r\n                throw err\r\n            })\r\n    }\r\n\r\n}\r\n\r\n// todo - view is changing by model, not controller.","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nexport default class {\r\n    \r\n    constructor (rawData) {\r\n        this.rawData = rawData;\r\n    }\r\n\r\n    getData () {\r\n        return {\r\n            definitionLists : this.findDefinitionLists(this.findDefinitionChunks()),\r\n            webDefinitionLists: this.findWebDefinitionLists(this.findWebDefinitionChunk()),\r\n            grammar: this.findGrammar()\r\n        }\r\n    }\r\n\r\n    findDefinitionChunks() {\r\n        const regExp = /<b>(.*)\\n[\\s\\S]*?<\\/[\\s\\S]*?<div class=std style=\"padding-left:40px\">([\\s\\S]*?)(<div id=\"forEmbed\">|<hr>)/g;\r\n        let regExpResult;\r\n        let definitionsChunks = [];\r\n        while ((regExpResult = regExp.exec(this.rawData)) !== null) {\r\n            definitionsChunks.push({\r\n                typeOfWord: regExpResult[1],\r\n                body: regExpResult[2]\r\n            })\r\n        }\r\n        return definitionsChunks\r\n    }\r\n\r\n    findDefinitionLists(chunks) {\r\n        return chunks.map(chunk => {\r\n            const list = chunk.body.split(/<li style=\"list-style:decimal\">/g).slice(1).map(listValue => {\r\n                return this.deleteUnnecessaryRow(listValue)\r\n            });\r\n            return {\r\n                typeOfWord: chunk.typeOfWord,\r\n                list\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteUnnecessaryRow(listValue) {\r\n        const regExp = /color:#767676/;\r\n        if (listValue.match(regExp)) {\r\n            return listValue\r\n        } else {\r\n            return listValue.replace(/<div[\\s\\S]*<\\/div>/, '')\r\n        }\r\n    }\r\n\r\n\r\n    findWebDefinitionChunk() {\r\n        const regExp = /Web Definitions[\\s\\S]*<\\/ol>/g;\r\n        return this.rawData.match(regExp)[0];\r\n    }\r\n\r\n    findWebDefinitionLists (chunk) {\r\n        let webList = [];\r\n        const regExp = /<li style=\"list-style:decimal; margin-bottom:10px;\">([\\s\\S]*?)<\\/li>/g;\r\n        let regExpResult;\r\n        while ((regExpResult = regExp.exec(chunk)) !== null) {\r\n            webList.push(regExpResult[1])\r\n        }\r\n        return webList\r\n    }\r\n\r\n    findGrammar () {\r\n        const regExp = /<span style=\"color:#767676\">([\\s\\S]*?)<\\/span>/;\r\n        return this.rawData.match(regExp)[1].slice(0,-2);\r\n    }\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nexport default class {\r\n\r\n    constructor (data) {\r\n        this.jsonData = data\r\n    }\r\n\r\n    getData () {\r\n        if (this.jsonData.def.length === 0) return;\r\n        return this.jsonData.def.map(description => {\r\n            return {\r\n                type: description.pos || ``,\r\n                transcription: description.ts ? `[${description.ts}]` : ``,\r\n                translations: description.tr\r\n                    .map(translation => {\r\n                        return {\r\n                            examples: this.transformExamples(translation.ex),\r\n                            synonyms: this.transformSynonyms(translation.syn),\r\n                            synonymsEn: this.transformSynonyms(translation.mean),\r\n                            translationType: translation.pos,\r\n                            translation: translation.text\r\n                        };\r\n                    })\r\n\r\n            };\r\n        })\r\n    }\r\n\r\n    transformExamples (examples = []) {\r\n        return examples.map(example => {\r\n            return `${example.text} - ${example.tr[0].text}`\r\n        })\r\n    }\r\n\r\n    transformSynonyms (synonyms = []) {\r\n        return synonyms.map(synonym => {\r\n            return synonym.text\r\n        })\r\n    }\r\n\r\n    findCorrectAnswers (parsedWords) {\r\n        return parsedWords.map(word => {\r\n            return word.translations.map(translation => {\r\n                return translation.translation.toLowerCase()\r\n            })\r\n        }).reduce((previousWords, currentWord) => {\r\n            return previousWords.concat(currentWord)\r\n        }, [])\r\n    }\r\n}","/**\r\n * Created by tup1tsa on 11.08.2016.\r\n */\r\nexport default (response) => {\r\n    if (response.status >= 200 && response.status < 300) {\r\n        return response\r\n    } else {\r\n        const error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error\r\n    }\r\n}","/**\r\n * Created by tup1tsa on 12.08.2016.\r\n */\r\nexport function showRegistrationBlock () {\r\n    document.querySelector('#authDefault div, #profileData, .notification').style.display = 'none';\r\n    document.getElementById('registrationBlock').style.display = 'block'\r\n}\r\n\r\nexport function showNotification (text) {\r\n    const selector = '#authentication .notification';\r\n    document.querySelector(selector).innerHTML = `<p>${text}</p>`;\r\n    document.querySelector(selector).style.display = 'block'\r\n}","/**\r\n * Created by tup1tsa on 12.08.2016.\r\n */\r\nexport default class {\r\n\r\n\r\n    static showQuestion (word) {\r\n        document.getElementById('questionedWord').textContent = word\r\n    }\r\n\r\n    static playCorrectAnswerSound () {\r\n        const audio = new Audio('audio/whoosh.mp3');\r\n        audio.play();\r\n    }\r\n\r\n}","/**\r\n * Created by tup1tsa on 12.08.2016.\r\n */\r\nexport function yandex (words) {\r\n    document.getElementById('translationBox').innerHTML =\r\n        words.map(word => {\r\n            return `<br><span class=\"ital\"><b>${word.type}</b></span> ${word.transcription} ` +\r\n                word.translations.map((translation, index) => {\r\n                    let innerHTML =`<br>${index+1}) ${translation.translation}`;\r\n                    if (translation.examples.length !== 0) {\r\n                        innerHTML += '. <br><span class=\"tabbed\">Examples:</span> ' +\r\n                            translation.examples.join('; ');\r\n                    }\r\n                    if (translation.synonyms.length !== 0) {\r\n                        innerHTML += `. <br><span class=\"tabbed\">Synonyms:</span> `+\r\n                            translation.synonyms.join('; ');\r\n                    }\r\n                    if (translation.synonymsEn.length !== 0) {\r\n                        innerHTML += `. <br><span class=\"tabbed\">Synonyms (en):</span> `+\r\n                            translation.synonymsEn.join('; ');\r\n                    }\r\n                    return innerHTML\r\n                }).join('')\r\n        }) + '<hr>';\r\n}\r\n\r\nexport function google (data) {\r\n    const grammar = `<span class=\"googleGrammar\"><b>Grammar:</b> ${data.grammar}</span><br>`;\r\n    const definitions = data.definitionLists.map(chunk => {\r\n        return `<b>${chunk.typeOfWord}</b><br><ol>\r\n                ${chunk.list.map(definition => {\r\n            return `<li>${definition}</li>`\r\n        }).join('')}</ol><hr>`\r\n    });\r\n    const webDefinition = `<b>Web Results:</b><ol>\r\n            ${data.webDefinitionLists.map(row => {\r\n        return `<li>${row}</li>`\r\n    }).join('')}</ol>`;\r\n    document.getElementById('dictionaryBox').innerHTML = grammar + definitions+ webDefinition\r\n}","//todo -  add sound (when u guessed right answer) from fallout4, add authentication (to save user progress)\r\nrequire('whatwg-fetch');\r\nimport yandexApi from './AjaxRequests/yandexApi'\r\nimport googleApi from './AjaxRequests/googleApi'\r\nimport savedYandexTranslation from './AjaxRequests/savedYandexTranslation'\r\nimport fetchRegistration from './AjaxRequests/registration'\r\nimport YandexParse from './Parse/yandex'\r\nimport GoogleParse from './Parse/google'\r\nimport Auth from './Model/authentication.js'\r\nimport LearnMachine from './Model/learningMachine'\r\nimport {yandex as yandexView, google as googleView} from './View/translations'\r\nimport {showRegistrationBlock, showNotification as showAuthNotification} from './View/authForm'\r\n\r\n\r\n\r\n \r\n class Controller {\r\n\r\n    static getTranslation() {\r\n        const word = document.getElementById('word').value;\r\n        if ((!word)) return;\r\n        savedYandexTranslation(word)\r\n            .then(data => {\r\n                const parse = new YandexParse(data);\r\n                yandexView(parse.getData());\r\n            }, err => {\r\n                if (err.status === 404) {\r\n                    yandexApi(word)\r\n                        .then(data => {\r\n                            const parse = new YandexParse(data);\r\n                            yandexView(parse.getData());\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    static getMeaning() {\r\n        const word = document.getElementById('word').value;\r\n        if ((!word)) return;\r\n        googleApi(word)\r\n            .then(data => {\r\n                const parse = new GoogleParse(data);\r\n                googleView(parse.getData());\r\n            })\r\n    }\r\n     \r\n     static register () {\r\n         const auth = new Auth();\r\n         let errors = false;\r\n         try {\r\n             var userInfo = auth.gatherUserInfo()\r\n         } catch (err) {\r\n             showAuthNotification(err.message);\r\n             errors  = true\r\n         }\r\n         if (errors) return;\r\n         fetchRegistration(userInfo.encryptedAuthorizationData, userInfo.email, userInfo.secretQuestion, userInfo.secretAnswer)\r\n             .then(response => {\r\n                 console.log(response)\r\n             })\r\n\r\n     }\r\n     \r\n     static login () {\r\n         let auth = new Auth();\r\n         auth.checkUserInfo()\r\n     }\r\n\r\n    static listenButtons () {\r\n        document.getElementById(\"getMeaning\").onclick = Controller.getMeaning;\r\n        document.getElementById(\"getTranslation\").onclick  = Controller.getTranslation;\r\n        document.getElementById(\"checkAnswer\").onclick = learningMachine.checkAnswer.bind(learningMachine);\r\n        document.getElementById(\"sendQuestion\").onclick = learningMachine.sendQuestion.bind(learningMachine);\r\n        document.getElementById('loginBtn').onclick = Controller.login;\r\n        document.getElementById('startRegistration').onclick = showRegistrationBlock;\r\n        document.getElementById('endRegistration').onclick = Controller.register;\r\n    }\r\n\r\n}\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n var learningMachine = new LearnMachine();\r\n learningMachine.getAllWords();\r\n \r\n window.onload = () => {\r\n     \r\n\r\n     setTimeout(() => {\r\n         learningMachine.sendQuestion();\r\n         Controller.listenButtons();\r\n     }, 200)\r\n };\r\n\r\n\r\n"]}